/**
 * 
 */
package com.firegnom.valkyrie.net;

import java.io.DataInput;
import java.io.IOException;
import java.nio.ByteBuffer;

/**
 * @author macio
 *
 */
public class ByteBufferDataInput implements DataInput {
	private ByteBuffer bb ;
	
	public ByteBufferDataInput(ByteBuffer bb){
		this.bb = bb;
	}

	public boolean readBoolean() throws IOException {
		return bb.get()==1?true:false;
	}

	public byte readByte() throws IOException {
		return bb.get();
	}

	public char readChar() throws IOException {
		
		return bb.getChar();
	}

	public double readDouble() throws IOException {
		// TODO Auto-generated method stub
		return bb.getDouble();
	}

	public float readFloat() throws IOException {
		return bb.getFloat();
	}

	public void readFully(byte[] b) throws IOException {
		bb.get(b);
		
	}

	public void readFully(byte[] b, int off, int len) throws IOException {
		bb.get(b,off,len);
		
	}

	public int readInt() throws IOException {
		return bb.getInt();
	}

	public String readLine() throws IOException {
		throw new IOException("Not implemented");
	}

	public long readLong() throws IOException {
		return bb.getLong();
	}

	public short readShort() throws IOException {
		return bb.getShort();
	}

	public String readUTF() throws IOException {
		int len = bb.getInt();
		byte[] bytes = new byte[len];
		for (int i = 0 ; i < len;i++){
			bytes[i] = bb.get();
		}
		return new String(bytes);
		
	}

	public int readUnsignedByte() throws IOException {
		throw new IOException("Not implemented");
	}

	public int readUnsignedShort() throws IOException {
		throw new IOException("Not implemented");
	}

	public int skipBytes(int n) throws IOException {
		 int ret = Math.min(bb.remaining(), n);
		bb.position(bb.position()+ret);
		
		return ret;
	}

	
	
	

}
